start BOF procedures EOF
BOF BOF
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID fact
LPAREN (
params paramlist
paramlist dcl
dcl type ID
type INT
INT int
ID n
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID ret
BECOMES =
NUM 0
SEMI ;
statements statements statement
statements
statement IF LPAREN test RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
IF if
LPAREN (
test expr EQ expr
expr term
term factor
factor ID
ID n
EQ ==
expr term
term factor
factor NUM
NUM 0
RPAREN )
LBRACE {
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID ret
BECOMES =
expr term
term factor
factor NUM
NUM 1
SEMI ;
RBRACE }
ELSE else
LBRACE {
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID ret
BECOMES =
expr term
term term STAR factor
term factor
factor ID
ID n
STAR *
factor ID LPAREN arglist RPAREN
ID fact
LPAREN (
arglist expr
expr expr MINUS term
expr term
term factor
factor ID
ID n
MINUS -
term factor
factor NUM
NUM 1
RPAREN )
SEMI ;
RBRACE }
RETURN return
expr term
term factor
factor ID
ID ret
SEMI ;
RBRACE }
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT
INT int
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term factor
factor ID LPAREN arglist RPAREN
ID fact
LPAREN (
arglist expr
expr term
term factor
factor NUM
NUM 5
RPAREN )
SEMI ;
RBRACE }
EOF EOF
