// WLP4 program to calculate the Greatest Common Divisor (GCD) of two non-negative integers
// The GCD is calculated using the Euclidean algorithm.
// Input a is in $1, Input b is in $2.

int wain(int a, int b) {
    // Variable Declarations (must come first)
    int x = 0; // The first number in the Euclidean algorithm (starts as a)
    int y = 0; // The second number (starts as b)
    int rem = 0; // Used to store the remainder during division

    // Initialize x and y. Note: Only single-number initializers are allowed in WLP4 declarations.
    // Assignments must come after declarations.
    x = a;
    y = b;

    // Use a while loop to perform the Euclidean algorithm:
    // while (y != 0) {
    //   rem = x % y;
    //   x = y;
    //   y = rem;
    // }
    while (y != 0) {
        // Calculate the remainder (rem = x % y)
        rem = x % y;
        
        // x becomes the old y
        x = y;
        
        // y becomes the old remainder (rem)
        y = rem;
    }

    // The GCD is the value left in x when y becomes 0.
    // Note: The return statement MUST be the final statement of the procedure.
    return x; 
}